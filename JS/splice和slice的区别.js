/**
 * splice会改变原数组，他通过删除或者替换现有元素或者原地添加新的元素来修改数组，并且以数组形式返回被修改的内容。有三个参数：
 * start，指定修改的开始位置，如果超出数组的长度，则从数组末尾开始添加;
 *        如果是负值，从数组末尾开始第几位;如果负数也大于数组的长度，则开始位置为0。
 * deleteCount 可选参数，表述要移除的数组元素的个数。如果设置0，则不会删除元素
 * items，可选，表示要添加进数组的元素。
 */

let arr1 = [1, 2, 3, 4, 5, 6, 7, 8]
// arr1.splice(1, 2)   // [2, 3]
arr1.splice(1, 3, 9, 10, 11)   // [ 1, 9, 10, 11, 7, 8 ]
arr1.splice(1, 0, 9, 10, 11)   // [1, 9, 10, 11, 2, 3, 4, 5,  6, 7, 8]

/**
 * slice返回由start和end决定的一个浅拷贝的新数组，原数组不会改变。有两个参数：
 * start，起始索引，从该索引提取原数组元素，如果是负数，则从末尾开始;如果省略start，则默认是数组的0下标开始
 * end，结束索引，在该索引结束提取原数组元素，如果end被省略，slice会一直到末尾;如果end大于数组的长度，也会提取到数组末尾 
 */
let arr2 = [1, 2, 3, 4, 5, 6, 7, 8]
const res1 = arr2.slice(1, 2)    // [ 2 ]
const res2 = arr2.slice(1)   // [2, 3, 4, 5, 6, 7, 8]
